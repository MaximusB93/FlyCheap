// <auto-generated />
using FlyCheap.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FlyCheap.Migrations
{
    [DbContext(typeof(AirportsDbContext))]
    partial class AirportsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FlyCheap.Model.AirportsJson", b =>
                {
                    b.Property<int>("AirportsJsonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AirportsJsonId"));

                    b.Property<int>("CoordinatesId")
                        .HasColumnType("integer");

                    b.Property<int>("NameTranslationsId")
                        .HasColumnType("integer");

                    b.Property<string>("city_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("country_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("flightable")
                        .HasColumnType("boolean");

                    b.Property<string>("iata_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("time_zone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AirportsJsonId");

                    b.HasIndex("CoordinatesId");

                    b.HasIndex("NameTranslationsId");

                    b.ToTable("DataAirports");
                });

            modelBuilder.Entity("FlyCheap.Model.Coordinates", b =>
                {
                    b.Property<int>("CoordinatesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CoordinatesId"));

                    b.Property<float>("lat")
                        .HasColumnType("real");

                    b.Property<float>("lon")
                        .HasColumnType("real");

                    b.HasKey("CoordinatesId");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("FlyCheap.Model.NameTranslations", b =>
                {
                    b.Property<int>("NameTranslationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NameTranslationsId"));

                    b.Property<string>("en")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NameTranslationsId");

                    b.ToTable("NameTranslations");
                });

            modelBuilder.Entity("FlyCheap.Model.AirportsJson", b =>
                {
                    b.HasOne("FlyCheap.Model.Coordinates", "coordinates")
                        .WithMany()
                        .HasForeignKey("CoordinatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlyCheap.Model.NameTranslations", "name_translations")
                        .WithMany()
                        .HasForeignKey("NameTranslationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("coordinates");

                    b.Navigation("name_translations");
                });
#pragma warning restore 612, 618
        }
    }
}
